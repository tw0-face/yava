apiVersion: v1
kind: ConfigMap
metadata:
  name: repo-monitor-script
  namespace: argo-events
data:
  monitor.sh: |
    #!/usr/local/bin/bash

    apk add --no-cache jq curl

    REPO_URL=${REPO_URL%.git}
    DOMAIN=$(echo "$REPO_URL" | awk -F'/' '{print $3}')
    AUTH_HEADER="Authorization: Bearer $AUTH_TOKEN"

    if [ "$DOMAIN" = "github.com" ]; then
        API_BASE_URL="https://api.github.com/repos/$(echo "$REPO_URL" | awk -F'/' '{print $(NF-1)"/"$NF}')"
        COMMITS_URL="$API_BASE_URL/commits?sha=$BRANCH&per_page=1"
    elif [ "$DOMAIN" = "gitlab.com" ]; then
        PROJECT_PATH=$(echo "$REPO_URL" | awk -F'/' '{print $(NF-1)"/"$NF}')
        ENCODED_PROJECT_PATH=$(echo -n "$PROJECT_PATH" | jq -sRr @uri)
        API_BASE_URL="https://gitlab.com/api/v4/projects/$ENCODED_PROJECT_PATH/repository"
        COMMITS_URL="$API_BASE_URL/commits?ref_name=$BRANCH&per_page=1"
    else
        echo "unsupported repository"
        exit 1
    fi

    LAST_COMMIT=""
    monitor_arr=($MONITOR_FOLDERS)

    while true; do
        LATEST_COMMIT=$(curl -s -H "$AUTH_HEADER" "$COMMITS_URL" | jq -r '.[0].sha // .[0].id')
        echo "latest commit: $LATEST_COMMIT"
        if [ "$LATEST_COMMIT" != "$LAST_COMMIT" ]; then
            if [ "$DOMAIN" = "github.com" ]; then
                DIFF_URL="$API_BASE_URL/commits/$LATEST_COMMIT"
            elif [ "$DOMAIN" = "gitlab.com" ]; then
                DIFF_URL="$API_BASE_URL/commits/$LATEST_COMMIT/diff"
            fi
            CHANGED_FILES=$(curl -s -H "$AUTH_HEADER" "$DIFF_URL" | jq -r 'if type == "array" then .[].new_path elif has("files") then .files[].filename else empty end')
            echo "changed files: $CHANGED_FILES"
            CHANGED_FOLDERS=$(echo "$CHANGED_FILES" | grep '/' | awk -F'/' '{print $1}' | uniq | xargs)
            echo "changed folders: $CHANGED_FOLDERS"
            changed_arr=($CHANGED_FOLDERS)
            for changed in "${changed_arr[@]}"; do
                for monitor in "${monitor_arr[@]}"; do
                    if [[ "$changed" == "$monitor" ]]; then
                        curl -v "${WEBHOOK_URL}/${changed}"
                    fi
                done
            done
            LAST_COMMIT="$LATEST_COMMIT"
        fi

        sleep "$POLLING_RATE"
    done
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: repo-monitor
  namespace: argo-events
spec:
  replicas: 1
  selector:
    matchLabels:
      app: repo-monitor
  template:
    metadata:
      labels:
        app: repo-monitor
    spec:
      containers:
        - name: monitor
          image: bash:latest
          command: ["/usr/local/bin/bash", "-x", "/script/monitor.sh"]
          volumeMounts:
            - name: script-volume
              mountPath: /script
          env:
            - name: MONITOR_FOLDERS
              value: "vote result worker"
            - name: REPO_URL
              value: "https://github.com/tw0-face/yava.git"
            - name: AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: voting-app-repo-cred-argo-events.yaml
                  key: password
            - name: WEBHOOK_URL
              value: "http://voting-webhook-eventsource-svc.argo-events.svc.cluster.local"
            - name: POLLING_RATE
              value: "30"
            - name: BRANCH
              value: "main"
      volumes:
        - name: script-volume
          configMap:
            name: repo-monitor-script
            defaultMode: 0755